// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
    Or(a=load, b=inc, out=loadTmp1);
    Or(a=loadTmp1, b=reset, out=loadTmp);

    Register(in[0..15]=inTmp3, load=loadTmp, out[0..15]=out[0..15], out=outTmp);

    Inc16(in[0..15]=outTmp, out[0..15]=incOut);
    
    Mux16(a[0..15]=outTmp, b[0..15]=incOut, sel=inc, out[0..15]=inTmp1);
    
    Mux16(a[0..15]=inTmp1, b[0..15]=in[0..15], sel=load, out[0..15]=inTmp2);
    
    Mux16(a[0..15]=inTmp2, b[0..15]=false, sel=reset, out[0..15]=inTmp3);
}   
