// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    
    And(a=in, b=notsel0, out=tmp1);
    And(a=tmp1, b=notsel1, out=tmp2-1);
    And(a=tmp2-1, b=notsel2, out=a);
    
    And(a=in, b=notsel0, out=tmp2);
    And(a=tmp2, b=notsel1, out=tmp22);
    And(a=tmp22, b=sel[2], out=e);

    And(a=in, b=notsel0, out=tmp3);
    And(a=tmp3, b=sel[1], out=tmp23);
    And(a=tmp23, b=notsel2, out=c);
    
    //011
    And(a=in, b=notsel0, out=tmp4);
    And(a=tmp4, b=sel[1], out=tmp24);
    And(a=tmp24, b=sel[2], out=g);
    //100
    And(a=in, b=sel[0], out=tmp5);
    And(a=tmp5, b=notsel1, out=tmp25);
    And(a=tmp25, b=notsel2, out=b);
    //101
    And(a=in, b=sel[0], out=tmp6);
    And(a=tmp6, b=notsel1, out=tmp26);
    And(a=tmp26, b=sel[2], out=f);
    //110
    And(a=in, b=sel[0], out=tmp7);
    And(a=tmp7, b=sel[1], out=tmp27);
    And(a=tmp27, b=notsel2, out=d);
    //111
    And(a=in, b=sel[0], out=tmp8);
    And(a=tmp8, b=sel[1], out=tmp28);
    And(a=tmp28, b=sel[2], out=h);

}